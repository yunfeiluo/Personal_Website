{
    "docs": [],
    "path": "articles/blogs/paper_review_char_level_text_classification.pdf",
    "text": "Paper Review\nAuthor: Yunfei Luo\nMay 12, 2020\n||||||||||||||||||||||||||||||||||||||||\nCharacter-level Convolutional Networks for Text Classi\fcation, by Zhang, Zhao, and LeCun\nReference Paper URL: https://arxiv.org/abs/1509.01626\nIntroduction/Main Goal\nThe paper was published in 2016. The main goal of the paper is to exemplify the performance of\nConvNets (Convolutional Networks) on text classification, based on Character-level. That is, to\nshow the ability of ConvNets understand the text (for the task of classification) without knowing\nthe knowledge from words and semantic structure of the language.\nWhat's New/Improvement\nThe authors are trying to improve upon the traditional text classification. As pointed by the au-\nthors, most of the machine learning classifiers for text classification nowadays are based on words.\nHowever, the authors offers a new approach to the task, i.e. treating the text as raw signal at char-\nacter level, rather than word level. More specifically, instead of present word at each entry of the\nvector representation for the text, the signal present single character at each entry. Such approach\nis supposed to be more effective and perform better with large scale dataset.\nObservations\nThis is also a paper on Neural Networks. The input is a text, and the output is a class that the\ntext belongs to. More specifically, the input text will be numerically transformed into a matrix with\ndimension m * l, such that m defines the domain of unit character depends on the input language,\nand l denotes the total length of the sequence of characters that we care about in the text. In this\npaper, the authors believe that l = 1014 is an appropriate length, since it is enough for catching\nthe key information in a text. The output class is simply in string format, for example, \"sport\",\n\"finance\", \"entertainment\", etc. Although in the paper, the authors use supervised learning to train\nthe Networks, all the class of the given texts are known, in practice, there do exist some unknown\nstate. The hidden node would be the actual class that the texts belong to. The topology of the\nhidden nodes could be several independent trees, each with a broad class as root. For example, the\nclass \"sport\", there would be some sub-class under this class, such as \"basketball\", \"swimming\",\n\"mixed martial arts\", etc.\nResult\nThe result that the authors obtained is shown as followed (page 6 in the paper):\n\nThe table of error shows that overall, the character-level ConvNets performed well. A more de-\ntailed comparison of the errors with other text classification model is offered at page 7:\n\nThe figure above shows that although the character-level ConvNets does not perform that well\nwith the dataset \"AG News\" compare with other models (except Bag-pf-means, because this model\nhas more errors in all the dataset cases), the overall values of errors made by the character-level\nConvNets is considerable. The most important point is that the character-level based ConvNets\ndoes not need dictionary for training, so that the entire training process is much more effective than\nthe other models.\nExtension/Follow up\nSome deficiency would be obvious that the character-level ConvNets might not perform well with\nnon-symbol-based language, such as Chinese. In this paper, the authors deal with this case (the\ndataset of Sogou News) by transform the Chinese characters into Pinyin. However, Pinyin and\nChinese characters are not an one-to-one mapping, but rather an onto mapping, from characters to\nPinyin. Placing different characters at the same place could mean extremely different things. So\nwould it be better if we split each character into strokes (such as point and across, which is also a\nfinite set), then use this sequence of strokes as raw input signals? Such follow-up questions could\nform the extension for the work presented in the paper.\n",
    "id": -1,
    "summery": "The main goal of the paper is to exemplify the performance of ConvNets (Convolutional Networks) on text classification, based on Character-level.",
    "tags": [
      "Machine Learning",
      "Artificial Intelligence",
      "Neural Networks",
      "Numerical Optimization",
      "Classification"
    ],
    "type": "blog",
    "title": "Character Level Text Classification, Paper Review"
  }